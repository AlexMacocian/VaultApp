<Window x:Class="VaultApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VaultApp"
        mc:Ignorable="d"
        Title="VaultApp" Height="480" Width="640"
        ResizeMode="NoResize"
        WindowStyle="None"
        Deactivated="Window_Deactivated"
        Activated="Window_Activated"
        SizeChanged="Window_SizeChanged"
        SourceInitialized="Window_SourceInitialized"
        Icon="./Resources/Lock.ico"
        MinHeight="480"
        MinWidth="640">
    <Window.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <Style
        x:Key="ButtonFocusVisual">
                <Setter
            Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MetroButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="#EEEEEEEE"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="10 5"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="OpacityMask" Value="#AA888888"/>
                                    <Setter Property="Margin" Value="2 1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <!--<Setter Property="Background" Value="DimGray"/>-->
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="#FAFAFB" />
                <Setter Property="BorderBrush" Value="#EAEAEB" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Viewbox Stretch="Uniform">
                                <Canvas Name="Layer_1" Width="35" Height="20" Canvas.Left="10" Canvas.Top="0">
                                    <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                                    <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                                    <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                                    <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform X="0" Y="0" />
                                        </Ellipse.RenderTransform>
                                        <Ellipse.BitmapEffect>
                                            <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                                        </Ellipse.BitmapEffect>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True" >
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="DodgerBlue" Duration="0:0:0.2" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.2" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition x:Name="Col3" Width="14"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- ContentPresenter to show an Icon if needed -->
                                    <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                                    <!-- Glyph is a checkmark if needed for a checkable menu -->
                                    <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                        <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                    </Grid>

                                    <!-- Content for the menu text etc -->
                                    <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>

                                    <!-- Content for the menu IGT -->
                                    <ContentPresenter Grid.Column="2"
                                          Margin="8,1,8,1"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                          VerticalAlignment="Center"/>

                                    <!-- Arrow drawn path which points to the next level of the menu -->
                                    <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                        <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                    </Grid>

                                    <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                    <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <Border x:Name="SubMenuBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Padding="0">
                                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Background="Transparent">
                                                <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </Grid>
                                        </Border>
                                    </Popup>
                                    <Rectangle x:Name="OverlayRect" Fill="White" Grid.ColumnSpan="4" Grid.Row="4" Opacity="0"></Rectangle>
                                </Grid>
                            </Border>

                            <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                            <ControlTemplate.Triggers>
                                <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Padding" Value="6,1,6,1"/>
                                    <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                    <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                    <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                </Trigger>

                                <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Padding" Value="6,1,6,1"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                </Trigger>

                                <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                    <Setter Property="Padding" Value="0,2,0,2"/>
                                </Trigger>

                                <!-- Role = SubMenuItem : this is a child menu item which has children-->
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                    <Setter Property="Padding" Value="0,2,0,2"/>
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                </Trigger>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                    <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                                </Trigger>

                                <!-- If no Icon is present the we collapse the Icon Content -->
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                </Trigger>

                                <!-- The GlyphPanel contains the CheckMark -->
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                </Trigger>

                                <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Setter Property="Opacity" Value="0.2" TargetName="OverlayRect"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SettingsButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Viewbox Grid.ColumnSpan="2" Stretch="Fill" Cursor="Hand">
                                    <Grid x:Name="BackgroundGrid" Grid.Column="1" Background="{TemplateBinding Background}" Opacity="0">
                                        <ToggleButton Opacity="0" IsChecked="{TemplateBinding IsChecked}"></ToggleButton>
                                    </Grid>
                                </Viewbox>
                                <Grid x:Name="AccentGrid" Grid.Column="0" Opacity="0" Background="DodgerBlue"></Grid>
                                <Label Content="{TemplateBinding Content}" Grid.ColumnSpan="2"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"></Condition>
                                        <Condition Property="IsChecked" Value="False"></Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="BackgroundGrid" Property="Opacity" Value="0.5"></Setter>
                                    <Setter TargetName="AccentGrid" Property="Opacity" Value="0"></Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"></Condition>
                                        <Condition Property="IsChecked" Value="True"></Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="BackgroundGrid" Property="Opacity" Value="0.7"></Setter>
                                    <Setter TargetName="AccentGrid" Property="Opacity" Value="1"></Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"></Condition>
                                        <Condition Property="IsChecked" Value="True"></Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="BackgroundGrid" Property="Opacity" Value="0.3"></Setter>
                                    <Setter TargetName="AccentGrid" Property="Opacity" Value="1"></Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"></Condition>
                                        <Condition Property="IsChecked" Value="False"></Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="BackgroundGrid" Property="Opacity" Value="0"></Setter>
                                    <Setter TargetName="AccentGrid" Property="Opacity" Value="0"></Setter>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="KeypadButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Label Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Background="Transparent"></Label>
                                <Border x:Name="Border" BorderBrush="Black" BorderThickness="2" CornerRadius="5" Opacity="1"></Border>
                                <Border x:Name="Background" Background="Black" CornerRadius="5" Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.5"></Setter>
                                    <Setter TargetName="Background" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="InputTextbox" TargetType="{x:Type TextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=Text}" BorderThickness="0" FontSize="{TemplateBinding FontSize}" TextAlignment="{TemplateBinding TextAlignment}" Margin="5, 0, 5, 0"></TextBox>
                                <Border x:Name="Border" BorderBrush="Black" BorderThickness="1" Opacity="0.3" CornerRadius="7"></Border>
                                <Border x:Name="FocusedBorder" BorderBrush="CadetBlue" BorderThickness="2" Opacity="0" CornerRadius="7"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Opacity" Value="0"></Setter>
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.3"></Setter>
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VisibilityButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MaxWidth="{TemplateBinding MaxWidth}"
                                  MaxHeight="{TemplateBinding MaxHeight}">
                                <Border x:Name="Background" Background="Black" CornerRadius="5" Opacity="0"></Border>
                                <Border x:Name="FocusedBorder" BorderBrush="CadetBlue" BorderThickness="2" Opacity="0" CornerRadius="5"></Border>
                                <Viewbox Stretch="Uniform" Margin="5">
                                    <Image x:Name="Image" Source="Resources\VisibilityOff.png"></Image>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0"></Setter>
                                    <Setter TargetName="Image" Property="Source" Value="Resources\VisibilityOff.png"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.1"></Setter>
                                    <Setter TargetName="Image" Property="Source" Value="Resources\VisibilityOn.png"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BackButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MaxWidth="{TemplateBinding MaxWidth}"
                                  MaxHeight="{TemplateBinding MaxHeight}">
                                <Border x:Name="Background" Background="Black" CornerRadius="5" Opacity="0"></Border>
                                <Border x:Name="FocusedBorder" BorderBrush="CadetBlue" BorderThickness="2" Opacity="0" CornerRadius="5"></Border>
                                <Viewbox Stretch="Uniform" Margin="5">
                                    <Image x:Name="Image" Source="Resources\LeftArrow.png"></Image>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AcceptButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MaxWidth="{TemplateBinding MaxWidth}"
                                  MaxHeight="{TemplateBinding MaxHeight}">
                                <Border x:Name="Background" Background="Black" CornerRadius="5" Opacity="0"></Border>
                                <Border x:Name="FocusedBorder" BorderBrush="CadetBlue" BorderThickness="2" Opacity="0" CornerRadius="5"></Border>
                                <Viewbox Stretch="Uniform" Margin="5">
                                    <Image x:Name="Image" Source="Resources\Accept.png"></Image>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RemoveButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MaxWidth="{TemplateBinding MaxWidth}"
                                  MaxHeight="{TemplateBinding MaxHeight}">
                                <Border x:Name="Background" Background="Black" CornerRadius="5" Opacity="0"></Border>
                                <Border x:Name="FocusedBorder" BorderBrush="CadetBlue" BorderThickness="2" Opacity="0" CornerRadius="5"></Border>
                                <Viewbox Stretch="Uniform" Margin="5">
                                    <Image x:Name="Image" Source="Resources\Delete.png"></Image>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DiceButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MaxWidth="{TemplateBinding MaxWidth}"
                                  MaxHeight="{TemplateBinding MaxHeight}">
                                <Border x:Name="Background" Background="Black" CornerRadius="5" Opacity="0"></Border>
                                <Border x:Name="FocusedBorder" BorderBrush="CadetBlue" BorderThickness="2" Opacity="0" CornerRadius="5"></Border>
                                <Viewbox Stretch="Uniform" Margin="5">
                                    <Image x:Name="Image" Source="Resources\Dice.png"></Image>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="FocusedBorder" Property="Opacity" Value="0.3"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.1"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="33"></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid x:Name="TitleBarGrid" MouseDown="TitleBar_MouseDown">
            <Rectangle x:Name="TitleBarBackground" Fill="DodgerBlue"></Rectangle>
            <Image x:Name="AppIcon" Source="Resources\Lock.ico" Margin="15, 0 ,0 ,0" Width="20" Height="20" HorizontalAlignment="Left"></Image>
            <TextBlock x:Name="AppTitle" Margin="50, 5, 0, 5" Height="33" HorizontalAlignment="Left" Text="Vault" FontSize="20" FontFamily="Microsoft Sans Serif" Foreground="White"></TextBlock>

            <Image Source="Resources\Close Button.png" Width="15" Height="15" HorizontalAlignment="Right" Margin="0, 0, 9, 0"></Image>
            <Image x:Name="ResizeImage" Source="Resources\Maximize.png" Width="15" Height="15" HorizontalAlignment="Right" Margin="0, 0, 42, 0"></Image>
            <Image Source="Resources\Minimize.png" Width="15" Height="15" HorizontalAlignment="Right" Margin="0, 0, 75, 0"></Image>

            <Button Style="{StaticResource MetroButton}" Width="33" Height="33" HorizontalAlignment="Right" Margin="0, 0, 0, 0" Click="CloseButton_Click" Background="Transparent" BorderBrush="Transparent"></Button>
            <Button Style="{StaticResource MetroButton}" Width="33" Height="33" HorizontalAlignment="Right" Margin="0, 0, 33, 0" Click="ResizeButton_Click" Background="Transparent" BorderBrush="Transparent"></Button>
            <Button Style="{StaticResource MetroButton}" Width="33" Height="33" HorizontalAlignment="Right" Margin="0, 0, 66, 0" Click="MinimizeButton_Click" Background="Transparent" BorderBrush="Transparent"></Button>
        </Grid>
        <Grid x:Name="MenuBarGrid" Grid.Row="1">
            <Grid.Effect>
                <BlurEffect x:Name="MenuBarBlurFx" KernelType="Gaussian" Radius="0"></BlurEffect>
            </Grid.Effect>
            <Menu x:Name="MenuBar" Margin="0, 0, 0, 0" Background="Transparent">
                <MenuItem x:Name="FileMenu" Header="File" Style="{DynamicResource MenuItem}" FontSize="16">
                    <MenuItem x:Name="NewMenu" Header="New" Style="{DynamicResource MenuItem}" FontSize="16" Click="NewMenu_Click"></MenuItem>
                    <MenuItem x:Name="OpenMenu" Header="Open" Style="{DynamicResource MenuItem}" FontSize="16" Click="OpenMenu_Click"></MenuItem>
                    <Separator x:Name="Separator3" Visibility="Collapsed"></Separator>
                    <MenuItem x:Name="SaveMenu" Header="Save" Style="{DynamicResource MenuItem}" FontSize="16" Click="SaveMenu_Click" Visibility="Collapsed"></MenuItem>
                    <MenuItem x:Name="SaveAsMenu" Header="Save As" Style="{DynamicResource MenuItem}" FontSize="16" Click="SaveAsMenu_Click" Visibility="Collapsed"></MenuItem>
                    <Separator x:Name="Separator1" Visibility="Collapsed"></Separator>
                    <MenuItem x:Name="GenerateMenu" Header="Generate Key" Style="{DynamicResource MenuItem}" FontSize="16" Visibility="Collapsed">
                        <MenuItem x:Name="GenerateTxtMenu" Header="As simple file" Style="{DynamicResource MenuItem}" FontSize="16" Click="GenerateKeyFile_Click"></MenuItem>
                        <MenuItem x:Name="GeneratePicture" Header="Hidden Into Picture File" Style="{DynamicResource MenuItem}" FontSize="16" Click="GeneratePicture_Click"></MenuItem>
                    </MenuItem>
                    <Separator x:Name="Separator2" Visibility="Collapsed"></Separator>
                    <MenuItem x:Name="CloseMenu" Header="Close" Style="{DynamicResource MenuItem}" FontSize="16" Click="CloseMenu_Click" Visibility="Collapsed"></MenuItem>
                </MenuItem>
                <MenuItem x:Name="EditMenu" Header="Edit" Style="{DynamicResource MenuItem}" FontSize="16">
                    <MenuItem x:Name="ChangePinMenu" Header="Change Pin" Style="{DynamicResource MenuItem}" FontSize="16" Click="ChangePin_Click"></MenuItem>
                </MenuItem>
            </Menu>
            <Image x:Name="SettingsImage" Source="Resources/Settings.png" HorizontalAlignment="Right" RenderTransformOrigin="0.5, 0.5">
                <Image.RenderTransform>
                    <RotateTransform />
                </Image.RenderTransform>
            </Image>
            <Button Style="{StaticResource MetroButton}" HorizontalAlignment="Right" Opacity="0" Width="25" Click="SettingsButton_Click"></Button>
        </Grid>
        <Grid x:Name="MainGrid" Grid.Row="2">
            <Grid.Effect>
                <BlurEffect x:Name="MainBlurFx" Radius="0" KernelType="Gaussian"></BlurEffect>
            </Grid.Effect>
            <Grid x:Name="IntroView" Visibility="Visible" Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="0.1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.1*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="0.1*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock x:Name="IntroTextBlock" FontSize="50" Text="There is nothing loaded at the moment. Use the menu at the top to load or create a new vault file" Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>
            </Grid>
            <Grid x:Name="NewFileView" Visibility="Hidden" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Margin="0, 20, 0, 0">
                    <TextBlock x:Name="NewFileNameLabel" Text="File name" FontSize="35" TextAlignment="Center"></TextBlock>
                    <TextBox x:Name="NewFileTextbox" AcceptsTab="False" AcceptsReturn="False" FontSize="30" Style="{StaticResource InputTextbox}" Margin="10, 0, 10, 10"></TextBox>
                </StackPanel>
                <Rectangle Fill="Black" Height="1" Grid.Column="1" VerticalAlignment="Bottom"></Rectangle>
                <Rectangle Fill="Black" Width="1" Grid.RowSpan="2" HorizontalAlignment="Right"></Rectangle>
                <Grid x:Name="NewFileKeypadHolder" Grid.Row="1" Grid.Column="1" Margin="0, 10, 0, 0"></Grid>
                <TextBlock x:Name="NewFileTextBlock" Text="1.Write the file name in the textbox to the right &#x0d;&#x0a;2.Input the pin code in the provided keypad&#x0d;&#x0a;3.Click okay to create the new file" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="25" Grid.RowSpan="2" Margin="10, 20, 10, 10"></TextBlock>
            </Grid>
            <Grid x:Name="UnlockView" Grid.Row="2" Visibility="Hidden" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"></RowDefinition>
                    <RowDefinition Height="*" MaxHeight="500"></RowDefinition>
                    <RowDefinition Height="0.1*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.Effect>
                    <BlurEffect Radius="0" KernelType="Gaussian"></BlurEffect>
                </Grid.Effect>
                <TextBlock x:Name="UnlockViewKeypadLabel" Text="To unlock the file, enter the pin code in the keypad lower, or..." FontSize="17" Margin="15, 25, 15, 15" TextWrapping="Wrap"></TextBlock>
                <TextBlock x:Name="UnlockViewKeyLabel" Text="Drag the generated key file into the marked area lower" FontSize="17" Margin="15, 25, 15, 15" TextWrapping="Wrap" Grid.Column="1"></TextBlock>
                <Rectangle Fill="Black" Width="1" Grid.RowSpan="3" Grid.Column="1" HorizontalAlignment="Left"></Rectangle>
                <Grid x:Name="UnlockviewKeypadHolder" Grid.Row="1" Grid.Column="0"></Grid>
                <Image x:Name="DropImage" Source="Resources\Drop.png" Margin="100" Grid.Row="1" Grid.Column="1" Opacity="0.3"></Image>
                <Rectangle x:Name="DropArea" Stroke="Black" Grid.Row="1" Grid.Column="1" StrokeDashArray="10 5" Margin="15"></Rectangle>
                <Rectangle Fill="White" Opacity="0" Grid.Row="1" Grid.Column="1"  AllowDrop="True" DragOver="DropArea_DragOver" DragEnter="DropArea_DragEnter" DragLeave="DropArea_DragLeave" Drop="DropArea_Drop" MouseLeftButtonDown="DropArea_MouseLeftButtonDown" Margin="15"></Rectangle>
            </Grid>
            <Grid x:Name="VaultView" Grid.Row="2" Visibility="Hidden" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="250"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label x:Name="VaultViewFilename" Content="Name" FontSize="45" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2"></Label>
                <Rectangle Fill="Black" Opacity="0.3" Height="1" VerticalAlignment="Bottom" Grid.ColumnSpan="2"></Rectangle>
                <Rectangle Fill="Black" Opacity="0.3" Width="1" HorizontalAlignment="Right" Grid.Row="1"></Rectangle>
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel x:Name="DomainStackPanel"></StackPanel>
                </ScrollViewer>
                <Grid x:Name="DomainGrid" Grid.Row="1" Grid.Column="1" Background="White" Visibility="Hidden">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="70"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Rectangle Fill="Black" Height="1" VerticalAlignment="Bottom" Opacity="0.3"></Rectangle>
                    <TextBlock x:Name="DomainNameTextBlock" FontSize="30" Text="Domain" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    <Button Style="{StaticResource RemoveButton}" Margin="20" HorizontalAlignment="Right" Click="DomainRemove_Click"></Button>
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Grid.Row="1" Visibility="Visible">
                        <StackPanel x:Name="EntryStackPanel"></StackPanel>
                    </ScrollViewer>
                    <Grid x:Name="EntryGrid" Grid.Row="1" Background="White" Visibility="Hidden">
                        <Button Style="{StaticResource RemoveButton}" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="20" Click="EntryRemoveButton_Click"></Button>
                        <Button Style="{StaticResource AcceptButton}" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="20, 20, 50, 20" Click="EntryAcceptButton_Click"></Button>
                        <Button Style="{StaticResource BackButton}" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="20" Click="EntryBackButton_Click"></Button>
                        <StackPanel>
                            <TextBlock x:Name="UsernameLabel" Text="Username" FontSize="25" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="15"></TextBlock>
                            <TextBox x:Name="UsernameTextbox" Text="Username" FontSize="20" Style="{StaticResource InputTextbox}" TextAlignment="Center" Margin="10"></TextBox>
                            <TextBlock x:Name="PasswordLabel" Text="Password" FontSize="25" TextAlignment="Center" VerticalAlignment="Center" Margin="15"></TextBlock>
                            <Grid>
                                <TextBox x:Name="PasswordTextbox" Text="Password" FontSize="20" Style="{StaticResource InputTextbox}" TextAlignment="Center" Margin="10, 10, 50, 10"></TextBox>
                                <Button Style="{StaticResource DiceButton}" Width="30" Height="30" HorizontalAlignment="Right" Margin="10" Click="EntryDiceButton_Click"></Button>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Grid x:Name="AddDomainGrid" Grid.Row="1" Grid.Column="1" Background="White" Visibility="Hidden">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock x:Name="AddDomainTextBlock" Text="Write the name of the new domain and then click OK to save" TextAlignment="Center" TextWrapping="Wrap" FontSize="20" Margin="10"></TextBlock>
                    <Rectangle Fill="Black" Height="1" Opacity="0.3" VerticalAlignment="Bottom"></Rectangle>
                    <StackPanel VerticalAlignment="Center" Grid.Row="1">
                        <Grid>
                            <Label x:Name="AddDomainLabel" Content="Domain name" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                            <Button Style="{StaticResource BackButton}" Width="30" Height="30" HorizontalAlignment="Left" Margin="10, 0, 0, 0" Click="AddDomainCancel_Click"></Button>
                            <Button Style="{StaticResource AcceptButton}" Width="30" Height="30" HorizontalAlignment="Right" Margin="0, 0, 10, 0" Click="AddDomainAccept_Click"></Button>
                        </Grid>
                        <TextBox x:Name="AddDomainNameTextBox" Style="{StaticResource InputTextbox}" FontSize="20" Margin="10"></TextBox>
                    </StackPanel>
                </Grid>
            </Grid>
            <Grid x:Name="ChangePinView" Grid.Row="2" Visibility="Hidden" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock x:Name="ChangePinLabel" FontSize="30" Text="To change the pin, write the new one lower. The pin code will be permanently changed on pressing OK." TextWrapping="Wrap" Margin="10, 20, 10, 10"></TextBlock>
                <Rectangle Height="1" Fill="Black" VerticalAlignment="Bottom" Opacity="0.3"></Rectangle>
                <Grid x:Name="ChangePinKeypadHolder" Grid.Row="2"></Grid>
            </Grid>
        </Grid>
        <Grid x:Name="SettingsGrid" Grid.Row="2" Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="1"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.2*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Rectangle Fill="White" Grid.ColumnSpan="3" Grid.RowSpan="2" Opacity="0"></Rectangle>
            <Label x:Name="SettingsLabel" Foreground="Black" Content="Settings" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.ColumnSpan="3"></Label>
            <StackPanel x:Name="SettingsStackPanel" Grid.Row="1">
                <ToggleButton x:Name="StayOnTop" Style="{StaticResource SettingsButton}" Content="Stay on top" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck"></ToggleButton>
                <ToggleButton x:Name="MinimizeToTray" Style="{StaticResource SettingsButton}" Content="Minimize to tray" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck"></ToggleButton>
                <ToggleButton x:Name="RunAtStartup" Style="{StaticResource SettingsButton}" Content="Run at startup" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck"></ToggleButton>
                <ToggleButton x:Name="LoadOnStartup" Style="{StaticResource SettingsButton}" Content="Load on startup" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck" Visibility="Collapsed"></ToggleButton>
                <ToggleButton x:Name="Language" Style="{StaticResource SettingsButton}" Content="Language" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck"></ToggleButton>
                <ToggleButton x:Name="Associate" Style="{StaticResource SettingsButton}" Content="Associate extension" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck"></ToggleButton>
                <ToggleButton x:Name="PasswordGenerator" Style="{StaticResource SettingsButton}" Content="Password settings" Height="50" Background="DarkGray" FontSize="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Cursor="Hand" Checked="Setting_Check" Unchecked="Settings_Uncheck"></ToggleButton>
            </StackPanel>
            <Grid x:Name="DetailGrid" Grid.Row="1" Grid.Column="3" Visibility="Hidden">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*"></ColumnDefinition>
                    <ColumnDefinition Width="0.3*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label x:Name="DetailedSettingsTitle" Content="Run at startup" FontSize="22" HorizontalAlignment="Center" VerticalContentAlignment="Center"></Label>
                <ToggleButton x:Name="DetailedSettingsToggle" Style="{StaticResource AnimatedSwitch}" Margin="10" Cursor="Hand" Grid.Column="1" Visibility="Visible" Click="DetailedSettingsToggle_Click"></ToggleButton>
                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="15, 0, 15, 0">
                    <TextBlock x:Name="DetailedSettingsExtra" Margin="0, 15, 0, 15" TextAlignment="Left" Text="If toggled, the application will open on startup" TextWrapping="Wrap" FontSize="20" Background="Transparent"></TextBlock>
                    <Rectangle Fill="Black" Height="1"></Rectangle>
                    <ScrollViewer Margin="0, 15, 0, 0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <Grid x:Name="DetailedSettingsExtraGrid">
                        </Grid>
                    </ScrollViewer>
                </StackPanel>
            </Grid>
            <Rectangle Fill="Black" Grid.Column="1" Grid.Row="1"></Rectangle>
        </Grid>
        <Grid x:Name="WarningGrid" Grid.Row="2" VerticalAlignment="Bottom" Height="0" Background="White" Margin="5">
            <Border BorderBrush="Black" BorderThickness="1"></Border>
            <Image Source="Resources/Warning.png" HorizontalAlignment="Left" Margin="30, 0, 0, 0" Width="100" Height="100"></Image>
            <Label x:Name="WarningLabel" Content="Incorrect pin" FontSize="45" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Height="100" Margin="130, 0, 0, 0"></Label>
        </Grid>
        <Grid x:Name="MarginsGrid" Grid.RowSpan="5" Opacity="0">
            <Button x:Name="TopBorder" Height="5" VerticalAlignment="Top" Margin="5,0,5,0" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeNS"></Button>
            <Button x:Name="BottomBorder" Height="5" VerticalAlignment="Bottom" Margin="5,0,5,0" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeNS"></Button>
            <Button x:Name="LeftBorder" HorizontalAlignment="Left" Width="5" Margin="0,5,0,5" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeWE"></Button>
            <Button x:Name="RightBorder" HorizontalAlignment="Right" Width="5" Margin="0,5,0,5" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeWE"></Button>
            <Button x:Name="TopLeftCorner" HorizontalAlignment="Left" VerticalAlignment="Top" Width="5" Height="5" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeNWSE"></Button>
            <Button x:Name="TopRightCorner" HorizontalAlignment="Right" VerticalAlignment="Top" Width="5" Height="5" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeNESW"></Button>
            <Button x:Name="BottomLeftCorner" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" Height="5" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeNESW"></Button>
            <Button x:Name="BottomRightCorner" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" Height="5" Opacity="0" PreviewMouseLeftButtonDown="Resize" Cursor="SizeNWSE"></Button>
        </Grid>
        <Grid x:Name="Keypad" MaxHeight="360" MaxWidth="400" Background="Transparent" Visibility="Hidden" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="15"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="15"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="Black" BorderThickness="1" Grid.RowSpan="6" Grid.ColumnSpan="5" Opacity="0.3"></Border>
            <TextBlock x:Name="KeypadLabel" Text="Input Pin Code" Grid.Column="1" Grid.ColumnSpan="3" Margin="0, 5, 0, 20" FontSize="32" TextAlignment="Center"></TextBlock>
            <TextBox x:Name="KeyPadInputTextBox" VerticalContentAlignment="Center" AcceptsReturn="False" AcceptsTab="False" Grid.Column="1" Grid.ColumnSpan="3" Margin="0, 50, 70, 10" Style="{StaticResource InputTextbox}" Text="" FontSize="35" PreviewKeyDown="KeyPadInputTextBox_KeyDown"></TextBox>
            <Button x:Name="KeypadVisibilityButton" Style="{StaticResource VisibilityButton}" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Right" MaxWidth="50" MaxHeight="50" Margin="0, 50, 10, 10" PreviewMouseLeftButtonDown="KeypadVisibilityButton_MouseLeftButtonDown" Click="KeypadVisibilityButton_Click" MouseLeave="KeypadVisibilityButton_MouseLeave"></Button>
            <Button Grid.Row="1" Grid.Column="1" Content="1" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="1" Grid.Column="2" Content="2" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="1" Grid.Column="3" Content="3" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="2" Grid.Column="1" Content="4" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="2" Grid.Column="2" Content="5" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="2" Grid.Column="3" Content="6" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="3" Grid.Column="1" Content="7" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="3" Grid.Column="2" Content="8" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="3" Grid.Column="3" Content="9" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="4" Grid.Column="1" Content="DEL" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="4" Grid.Column="2" Content="0" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
            <Button Grid.Row="4" Grid.Column="3" Content="OK" Style="{StaticResource KeypadButton}" Foreground="Black" Background="Black" FontSize="30" Click="KeypadButton_Click"></Button>
        </Grid>
        <Grid x:Name="AlertGrid" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" Height="300" Width="300" Background="White" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border BorderBrush="DodgerBlue" BorderThickness="1" Grid.RowSpan="2"></Border>
            <StackPanel Grid.Row="0" Background="DodgerBlue" Orientation="Horizontal">
                <Image Source="Resources\Warning.png"></Image>
                <TextBlock Text="Warning" FontSize="18" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
            </StackPanel>
            <TextBlock Grid.Row="1" Text="The file has been changed. Wanna save the changes before closing?" TextWrapping="Wrap" FontSize="20" Margin="5"></TextBlock>
            <StackPanel Grid.Row="1" Height="80" Margin="0, 50, 0, 0" Orientation="Horizontal">
                <Button Style="{StaticResource MetroButton}" BorderBrush="Transparent" FontSize="15" Content="Yes" MinWidth="50" Height="35" Margin="50, 0, 20, 0" Click="AlertButton_Click"></Button>
                <Button Style="{StaticResource MetroButton}" BorderBrush="Transparent" FontSize="15" Content="No" MinWidth="50" Height="35" Margin="0, 0, 20, 0" Click="AlertButton_Click"></Button>
                <Button Style="{StaticResource MetroButton}" BorderBrush="Transparent" FontSize="15" Content="Cancel" MinWidth="50" Height="35" Margin="0, 0, 20, 0" Click="AlertButton_Click"></Button>
            </StackPanel>
        </Grid>
        <Grid x:Name="LoadingSpinnerGrid" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="Hidden">
            <local:LoadingSpinner ForeColor="DodgerBlue" Height="50" Width="50"></local:LoadingSpinner>
            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="#01000000"></Rectangle>
        </Grid>
        <Border BorderBrush="CornflowerBlue" Grid.RowSpan="3" BorderThickness="1"></Border>
    </Grid>
</Window>
